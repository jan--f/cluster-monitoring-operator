// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// DataSinkApplyConfiguration represents an declarative configuration of the DataSink type for use
// with apply.
type DataSinkApplyConfiguration struct {
	Name                      *string                                      `json:"name,omitempty"`
	Type                      *string                                      `json:"type,omitempty"`
	PrometheusRemoteWriteSpec *PrometheusRemoteWriteSpecApplyConfiguration `json:"prometheusRemoteWriteSpec,omitempty"`
}

// DataSinkApplyConfiguration constructs an declarative configuration of the DataSink type for use with
// apply.
func DataSink() *DataSinkApplyConfiguration {
	return &DataSinkApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *DataSinkApplyConfiguration) WithName(value string) *DataSinkApplyConfiguration {
	b.Name = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *DataSinkApplyConfiguration) WithType(value string) *DataSinkApplyConfiguration {
	b.Type = &value
	return b
}

// WithPrometheusRemoteWriteSpec sets the PrometheusRemoteWriteSpec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PrometheusRemoteWriteSpec field is set to the value of the last call.
func (b *DataSinkApplyConfiguration) WithPrometheusRemoteWriteSpec(value *PrometheusRemoteWriteSpecApplyConfiguration) *DataSinkApplyConfiguration {
	b.PrometheusRemoteWriteSpec = value
	return b
}
