// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/api/monitoring/v1alpha1"
)

// DataTransformationApplyConfiguration represents an declarative configuration of the DataTransformation type for use
// with apply.
type DataTransformationApplyConfiguration struct {
	Type *string                          `json:"type,omitempty"`
	Spec *v1alpha1.DataTransformationSpec `json:"dataTransformationSpec,omitempty"`
}

// DataTransformationApplyConfiguration constructs an declarative configuration of the DataTransformation type for use with
// apply.
func DataTransformation() *DataTransformationApplyConfiguration {
	return &DataTransformationApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *DataTransformationApplyConfiguration) WithType(value string) *DataTransformationApplyConfiguration {
	b.Type = &value
	return b
}

// WithSpec sets the Spec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Spec field is set to the value of the last call.
func (b *DataTransformationApplyConfiguration) WithSpec(value v1alpha1.DataTransformationSpec) *DataTransformationApplyConfiguration {
	b.Spec = &value
	return b
}
